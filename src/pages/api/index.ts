import QueryString from 'query-string'
import { NextApiRequest, NextApiResponse } from 'next'
import axios, { AxiosResponse } from 'axios'

export default async function handler(req: NextApiRequest, res: NextApiResponse) {

    const testData: any = {
        "sectionOne_gender": "Ж",
        "sectionOne_age": "26-40",
        "sectionOne_occupation": "Сотрудник сферы обслуживания",
        "sectionOne_district": "csadgdzfh",
        "sectionTwo_timing": "Раз в месяц",
        "sectionTwo_purpose": [
           "Наблюдаю за природными видами",
           "Занимаюсь спортом (уточните пожалуйста в варианте \"другое\": пробежка/велосипед/скандинавская ходьба/лыжи/коньки)",
           "Купаюсь/загораю"
        ],
        "sectionTwo_propblem": [
           "Проблемы благоустройства (освещение, состояние дорожек)",
           "Отсутствует ощущение безопасности на территории",
           "Неприспособленность набережной для маломобильных горожан",
           "Отсутствие мест отдыха у воды и водных активностей",
           "Отсутствие пляжа",
           "Узкая пешеходная дорожка: пешеходы, мамы с колясками, велосипедисты мешают друг другу",
           "Наличие маргинальных активностей: выпивающие, бездомные",
           "Ветхость тещиного моста",
           "Нет общественных туалетов"
        ],
        "sectionTwo_like": "csDF",
        "sectionTwo_memory": "waerte56dsfg dfxxb cvdb",
        "sectionTwo_fututre": [
           "Благоустроенная: состояние дорожек, покрытий, освещение",
           "Связанная с прудом: отдых у воды, водный спорт, пляж и купание, мероприятия на воде",
           "Олицетворяющая будущее города: современный дизайн и технологичность",
           "Олицетворяющая исторический образ города"
        ],
        "sectionTwo_field": [
           "Туризм",
           "Услуги питания (киоски, кофейни) и торговли (ярмарки, сувениры)",
           "Транспортную (развитый общественный транспорт, в т.ч. речной транспорт)"
        ],
        "sectionTwo_activity": "dasfgertgsdfyt",
        "sectionTwo_comment": "23455fsdfx",
        "sectionThree_activity": [
           "Занимаюсь спортом (уточните каким и где ниже в разделе \"Другое\")",
           "Занимаюсь творчеством (уточните каким и где ниже в разделе \"Другое\")",
           "Встречаюсь с друзьями, коллегами (уточните где ниже в разделе \"Другое\")",
           "Хожу на мероприятия (уточните как часто, какие и куда в разделе \"Другое\")"
        ],
        "sectionThree_place": "",
        "sectionThree_miss": [
           "Современных благоустроенных общественных пространств (площадей, пешеходных улиц, скверов, парков и т.п.)",
           "Мест развлечений (ресторанов, клубов, баров, развлекательных центров, кинотеатров и т.п.)",
           "Образовательных объектов и площадок (лекториев, коворкингов, библиотек и т.п.)",
           "Крупных событий и зрелищ (публичных мероприятий, городских праздников, соревнований и т.п.)",
           "Семейных зон и объектов (детских площадок, семейные кафе, и т.п.)"
        ],
        "sectionThree_opportunity": "",
        "sectionThree_unique": "dstyfh",
        "sectionThree_idea": "",
        "sectionFour_involve": 'Базового благоустройства городских пространств ( дорог, тротуаров, скамеек, урн, освещения и т.п.),Современных благоустроенных общественных пространств (площадей, пешеходных улиц, скверов, парков и т.п.),Природных зон (лесопарков, скверов и т.п.),Мест развлечений (ресторанов, клубов, баров, развлекательных центров, кинотеатров и т.п.),Образовательных объектов и площадок (лекториев, коворкингов, библиотек и т.п.),Крупных событий и зрелищ (публичных мероприятий, городских праздников, соревнований и т.п.),Торговых объектов и услуг (магазинов, торговых центров, ярмарок, салонов красоты и т.п.),Спортивных площадок и объектов,Семейных зон и объектов (детских площадок, семейные кафе, и т.п.),Возможности социального взаимодействия с другими жителями',
        "sectionFour_contact": null
     }

    const url = QueryString.stringifyUrl({
        url: 'https://script.google.com/macros/s/AKfycbxACtHqPJ1N-TbmGgcXHWEIf_jStz1taaWQsvSYx7xEh1UYYVi6H1Vc2g/exec',
        query: {}, // req.query,
    }, {
        arrayFormat: 'comma'
    })

    await axios.post(url, testData)
        .then(res => {
            console.log(res)
            if (res.status !== 200) {
                // console.log(res)
            }
            return res // .json()
        })
    // .then(res => {
    //     res.result === 'error' && console.log('result error', res)
    // })
}